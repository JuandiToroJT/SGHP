{"ast":null,"code":"const API_URL = 'http://localhost:8080/tareas';\nexport const fetchTareas = async () => {\n  try {\n    const response = await fetch(`${API_URL}/listar`);\n    if (!response.ok && response.status !== 400) {\n      const errorMessage = `Error en la solicitud: ${response.statusText}`;\n      return {\n        error: errorMessage,\n        success: false\n      };\n    }\n    const data = await response.json();\n    if (response.status === 400) {\n      return {\n        error: data.mensajeError,\n        success: false\n      };\n    }\n    return {\n      respuesta: data,\n      success: true\n    };\n  } catch (error) {\n    console.error('Error al obtener las tareas:', error);\n    return {\n      error: 'Error al obtener las tareas',\n      success: false\n    };\n  }\n};\nexport const fetchPostTarea = async body => {\n  try {\n    let url = body.id > 0 ? `${API_URL}/editar` : `${API_URL}/adicionar`;\n    let metodo = body.id > 0 ? \"PUT\" : \"POST\";\n    const response = await fetch(url, {\n      method: metodo,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    if (!response.ok && response.status !== 400) {\n      const errorMessage = `Error en la solicitud: ${response.statusText}`;\n      return {\n        error: errorMessage,\n        success: false\n      };\n    }\n    const data = await response.json();\n    if (response.status === 400) {\n      return {\n        error: data.mensajeError,\n        success: false\n      };\n    }\n    return {\n      respuesta: data,\n      success: true\n    };\n  } catch (error) {\n    console.error('Error al registrar la tarea:', error);\n    return {\n      error: 'Error al registrar la tarea',\n      success: false\n    };\n  }\n};\nexport const fetchEliminarTarea = async id => {\n  try {\n    const response = await fetch(`${API_URL}/${id}/eliminar`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok && response.status !== 400) {\n      const errorMessage = `Error en la solicitud: ${response.statusText}`;\n      return {\n        error: errorMessage,\n        success: false\n      };\n    }\n    const data = await response.json();\n    if (response.status === 400) {\n      return {\n        error: data.mensajeError,\n        success: false\n      };\n    }\n    return {\n      respuesta: data,\n      success: true\n    };\n  } catch (error) {\n    console.error('Error al registrar la tarea:', error);\n    return {\n      error: 'Error al registrar la tarea',\n      success: false\n    };\n  }\n};","map":{"version":3,"names":["API_URL","fetchTareas","response","fetch","ok","status","errorMessage","statusText","error","success","data","json","mensajeError","respuesta","console","fetchPostTarea","body","url","id","metodo","method","headers","JSON","stringify","fetchEliminarTarea"],"sources":["C:/Users/anony/Desktop/ProyectoSGHP/SGHPFrontend/sghp/src/controllers/TareasController.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/tareas';\r\n\r\nexport const fetchTareas = async () => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/listar`);\r\n    \r\n        if (!response.ok && response.status !== 400) {\r\n          const errorMessage = `Error en la solicitud: ${response.statusText}`;\r\n          return { error: errorMessage, success: false };\r\n        }\r\n    \r\n        const data = await response.json();\r\n        if (response.status === 400){\r\n            return { error: data.mensajeError, success: false };\r\n        }\r\n\r\n        return { respuesta: data, success: true };\r\n      } catch (error) {\r\n        console.error('Error al obtener las tareas:', error);\r\n        return { error: 'Error al obtener las tareas', success: false };\r\n      }\r\n};\r\n\r\nexport const fetchPostTarea = async (body) => {\r\n  try {\r\n      let url = body.id > 0 ? `${API_URL}/editar` : `${API_URL}/adicionar`;\r\n      let metodo = body.id > 0 ? \"PUT\" : \"POST\";\r\n      const response = await fetch(url, {\r\n          method: metodo,\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(body),\r\n      });\r\n  \r\n      if (!response.ok && response.status !== 400) {\r\n        const errorMessage = `Error en la solicitud: ${response.statusText}`;\r\n        return { error: errorMessage, success: false };\r\n      }\r\n  \r\n      const data = await response.json();\r\n      if (response.status === 400){\r\n          return { error: data.mensajeError, success: false };\r\n      }\r\n\r\n      return { respuesta: data, success: true };\r\n    } catch (error) {\r\n      console.error('Error al registrar la tarea:', error);\r\n      return { error: 'Error al registrar la tarea', success: false };\r\n    }\r\n};\r\n\r\nexport const fetchEliminarTarea = async (id) => {\r\n  try {\r\n      const response = await fetch(`${API_URL}/${id}/eliminar`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          }\r\n      });\r\n  \r\n      if (!response.ok && response.status !== 400) {\r\n        const errorMessage = `Error en la solicitud: ${response.statusText}`;\r\n        return { error: errorMessage, success: false };\r\n      }\r\n  \r\n      const data = await response.json();\r\n      if (response.status === 400){\r\n          return { error: data.mensajeError, success: false };\r\n      }\r\n\r\n      return { respuesta: data, success: true };\r\n    } catch (error) {\r\n      console.error('Error al registrar la tarea:', error);\r\n      return { error: 'Error al registrar la tarea', success: false };\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}