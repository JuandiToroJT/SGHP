{"ast":null,"code":"const API_URL = 'http://localhost:8080/tareas';\nexport const fetchTareas = async () => {\n  try {\n    const response = await fetch(`${API_URL}/listar`);\n    if (!response.ok && response.status !== 400) {\n      const errorMessage = `Error en la solicitud: ${response.statusText}`;\n      return {\n        error: errorMessage,\n        success: false\n      };\n    }\n    const data = await response.json();\n    if (response.status === 400) {\n      return {\n        error: data.mensajeError,\n        success: false\n      };\n    }\n    return {\n      respuesta: data,\n      success: true\n    };\n  } catch (error) {\n    console.error('Error al obtener las tareas:', error);\n    return {\n      error: 'Error al obtener las tareas',\n      success: false\n    };\n  }\n};\nexport const fetchPostAmenaza = async (idUsuario, body) => {\n  try {\n    const response = await fetch(`${API_URL}/${idUsuario}/reportar`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    if (!response.ok && response.status !== 400) {\n      const errorMessage = `Error en la solicitud: ${response.statusText}`;\n      return {\n        error: errorMessage,\n        success: false\n      };\n    }\n    const data = await response.json();\n    if (response.status === 400) {\n      return {\n        error: data.mensajeError,\n        success: false\n      };\n    }\n    return {\n      respuesta: data,\n      success: true\n    };\n  } catch (error) {\n    console.error('Error al registrar la amenaza:', error);\n    return {\n      error: 'Error al registrar la amenaza',\n      success: false\n    };\n  }\n};\nexport const fetchAmenazasLog = async () => {\n  try {\n    const response = await fetch(`${API_URL}/analizarLog`);\n    if (!response.ok && response.status !== 400) {\n      const errorMessage = `Error en la solicitud: ${response.statusText}`;\n      return {\n        error: errorMessage,\n        success: false\n      };\n    }\n    const data = await response.json();\n    if (response.status === 400) {\n      return {\n        error: data.mensajeError,\n        success: false\n      };\n    }\n    return {\n      respuesta: data,\n      success: true\n    };\n  } catch (error) {\n    console.error('Error al obtener las amenazas:', error);\n    return {\n      error: 'Error al obtener las amenazas',\n      success: false\n    };\n  }\n};","map":{"version":3,"names":["API_URL","fetchTareas","response","fetch","ok","status","errorMessage","statusText","error","success","data","json","mensajeError","respuesta","console","fetchPostAmenaza","idUsuario","body","method","headers","JSON","stringify","fetchAmenazasLog"],"sources":["C:/Users/anony/Desktop/ProyectoSGHP/SGHPFrontend/sghp/src/controllers/TareasController.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/tareas';\r\n\r\nexport const fetchTareas = async () => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/listar`);\r\n    \r\n        if (!response.ok && response.status !== 400) {\r\n          const errorMessage = `Error en la solicitud: ${response.statusText}`;\r\n          return { error: errorMessage, success: false };\r\n        }\r\n    \r\n        const data = await response.json();\r\n        if (response.status === 400){\r\n            return { error: data.mensajeError, success: false };\r\n        }\r\n\r\n        return { respuesta: data, success: true };\r\n      } catch (error) {\r\n        console.error('Error al obtener las tareas:', error);\r\n        return { error: 'Error al obtener las tareas', success: false };\r\n      }\r\n};\r\n\r\nexport const fetchPostAmenaza = async (idUsuario, body) => {\r\n  try {\r\n      const response = await fetch(`${API_URL}/${idUsuario}/reportar`, {\r\n          method: 'POST',\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(body),\r\n      });\r\n  \r\n      if (!response.ok && response.status !== 400) {\r\n        const errorMessage = `Error en la solicitud: ${response.statusText}`;\r\n        return { error: errorMessage, success: false };\r\n      }\r\n  \r\n      const data = await response.json();\r\n      if (response.status === 400){\r\n          return { error: data.mensajeError, success: false };\r\n      }\r\n\r\n      return { respuesta: data, success: true };\r\n    } catch (error) {\r\n      console.error('Error al registrar la amenaza:', error);\r\n      return { error: 'Error al registrar la amenaza', success: false };\r\n    }\r\n};\r\n\r\nexport const fetchAmenazasLog = async () => {\r\n  try {\r\n      const response = await fetch(`${API_URL}/analizarLog`);\r\n  \r\n      if (!response.ok && response.status !== 400) {\r\n        const errorMessage = `Error en la solicitud: ${response.statusText}`;\r\n        return { error: errorMessage, success: false };\r\n      }\r\n  \r\n      const data = await response.json();\r\n      if (response.status === 400){\r\n          return { error: data.mensajeError, success: false };\r\n      }\r\n\r\n      return { respuesta: data, success: true };\r\n    } catch (error) {\r\n      console.error('Error al obtener las amenazas:', error);\r\n      return { error: 'Error al obtener las amenazas', success: false };\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}