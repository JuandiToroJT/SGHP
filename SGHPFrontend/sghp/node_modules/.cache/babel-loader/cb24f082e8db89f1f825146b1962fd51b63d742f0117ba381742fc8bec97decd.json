{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useUser } from '../UserContext';\nimport LoadingOverlay from './LoadingOverlay';\nconst ListadoAmenazas = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    userId\n  } = useUser();\n  const [amenazas, setAmenazas] = useState([]);\n  useEffect(() => {\n    // Lógica para obtener la lista de amenazas y actualizar el estado\n    // Ejemplo:\n    const obtenerAmenazas = async () => {\n      // Lógica para obtener las amenazas desde una API o algún otro origen de datos\n      // Puedes usar fetch o axios, por ejemplo\n      const response = await fetch('URL_DE_TU_API/amenazas');\n      const data = await response.json();\n      setAmenazas(data);\n    };\n    obtenerAmenazas();\n  }, []);\n};\n_s(ListadoAmenazas, \"DyGwFAJ25zZh8Yh8MU9ATdK9kAE=\", false, function () {\n  return [useUser];\n});\n_c = ListadoAmenazas;\nexport default ListadoAmenazas;\nvar _c;\n$RefreshReg$(_c, \"ListadoAmenazas\");","map":{"version":3,"names":["React","useState","useEffect","useUser","LoadingOverlay","ListadoAmenazas","_s","error","setError","success","setSuccess","loading","setLoading","userId","amenazas","setAmenazas","obtenerAmenazas","response","fetch","data","json","_c","$RefreshReg$"],"sources":["C:/Users/anony/Documents/POO2023-2/ProyectoFinal/SOCFrontend/soc/src/components/listado-amenazas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useUser } from '../UserContext';\r\nimport LoadingOverlay from './LoadingOverlay';\r\n\r\nconst ListadoAmenazas = () => {\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { userId } = useUser();\r\n\r\n    const [amenazas, setAmenazas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Lógica para obtener la lista de amenazas y actualizar el estado\r\n        // Ejemplo:\r\n        const obtenerAmenazas = async () => {\r\n          // Lógica para obtener las amenazas desde una API o algún otro origen de datos\r\n          // Puedes usar fetch o axios, por ejemplo\r\n          const response = await fetch('URL_DE_TU_API/amenazas');\r\n          const data = await response.json();\r\n          setAmenazas(data);\r\n        };\r\n    \r\n        obtenerAmenazas();\r\n      }, []);\r\n};\r\n\r\nexport default ListadoAmenazas;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEY;EAAO,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE5B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;MACtD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,WAAW,CAACI,IAAI,CAAC;IACnB,CAAC;IAEDH,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;AACZ,CAAC;AAACV,EAAA,CArBID,eAAe;EAAA,QAIEF,OAAO;AAAA;AAAAkB,EAAA,GAJxBhB,eAAe;AAuBrB,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}